#ifndef __ATUM_LOG_MANAGER_H__
#define __ATUM_LOG_MANAGER_H__

#include "StdAfx.h"

#include <queue>
#include <fstream>
#include "AtumProtocol.h"

using namespace std;

#define NUM_OF_LOG_WORKER_THREADS	1

DWORD WINAPI LogWorkerThread(LPVOID lpParam);
const char* getSZLogType(USHORT type);

class CAtumLogManager 
{
///////////////////////////////////////////////////////////////////////////////
// public member functions
///////////////////////////////////////////////////////////////////////////////
public:
	CAtumLogManager();
	~CAtumLogManager();

	BOOL Init();
	void Clean();

	BOOL OpenFile();
	BOOL CloseFile();
	BOOL ChangeFile();
	BOOL WriteLog(USHORT msgType, MSG_FL_LOG* log, char* szAction, ofstream* file = NULL);

///////////////////////////////////////////////////////////////////////////////
// private member functions
///////////////////////////////////////////////////////////////////////////////
private:

///////////////////////////////////////////////////////////////////////////////
// public member variables
///////////////////////////////////////////////////////////////////////////////
public:

///////////////////////////////////////////////////////////////////////////////
// private member functions
///////////////////////////////////////////////////////////////////////////////
private:
	CRITICAL_SECTION	m_criticalSection;
	HANDLE				m_hFile;
};



#endif
